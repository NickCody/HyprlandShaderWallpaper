name: Build AppImage

on:
  push:
    branches: [ main ]
    tags: [ 'v*' ]
  pull_request:
    branches: [ main ]

env:
  CARGO_TERM_COLOR: always

jobs:
  build-appimage:
    runs-on: ubuntu-22.04
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      with:
        fetch-depth: 0

    - name: Install system dependencies
      run: |
        sudo apt update
        sudo apt install -y \
          build-essential pkg-config cmake ninja-build \
          libwayland-dev wayland-protocols libxkbcommon-dev \
          libegl1-mesa-dev libgles2-mesa-dev \
          mesa-vulkan-drivers vulkan-tools libvulkan-dev \
          python3-pip python3-setuptools patchelf desktop-file-utils \
          libfuse2 curl wget

    - name: Install Rust toolchain
      uses: dtolnay/rust-toolchain@stable
      with:
        components: rustfmt, clippy

    - name: Cache Rust dependencies
      uses: Swatinem/rust-cache@v2

    - name: Install appimage-builder
      run: |
        sudo pip3 install appimage-builder

    - name: Validate Rust formatting and linting
      run: |
        cargo fmt --all --check
        cargo clippy --all-targets --all-features -- -D warnings

    - name: Run tests
      run: cargo test --verbose --workspace

    - name: Build AppImage
      run: |
        appimage-builder --recipe AppImageBuilder.yml --skip-test

    - name: Get version for artifact naming
      id: version
      run: |
        if [[ $GITHUB_REF == refs/tags/* ]]; then
          VERSION=${GITHUB_REF#refs/tags/}
        else
          VERSION=${GITHUB_SHA::8}
        fi
        echo "version=$VERSION" >> $GITHUB_OUTPUT
        echo "Version: $VERSION"

    - name: Rename AppImage with version
      run: |
        mv WallShader-x86_64.AppImage WallShader-${{ steps.version.outputs.version }}-x86_64.AppImage
        ls -la *.AppImage

    - name: Test AppImage
      run: |
        chmod +x WallShader-${{ steps.version.outputs.version }}-x86_64.AppImage
        ./WallShader-${{ steps.version.outputs.version }}-x86_64.AppImage --help

    - name: Upload AppImage as artifact
      uses: actions/upload-artifact@v4
      with:
        name: WallShader-AppImage-${{ steps.version.outputs.version }}
        path: WallShader-${{ steps.version.outputs.version }}-x86_64.AppImage
        retention-days: 30

    - name: Release AppImage
      if: startsWith(github.ref, 'refs/tags/')
      uses: softprops/action-gh-release@v1
      with:
        files: WallShader-${{ steps.version.outputs.version }}-x86_64.AppImage
        draft: false
        prerelease: false
        generate_release_notes: true
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}