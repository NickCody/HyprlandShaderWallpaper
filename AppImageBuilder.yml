version: 1

AppDir:
  path: ./AppDir

  app_info:
    id: io.github.nickcody.wax11
    name: wax11 shader
    icon: wax11  
    version: "0.9.1"
    exec: usr/bin/wax11
    exec_args: $@

  apt:
    arch: amd64
    sources:
      - sourceline: 'deb http://archive.ubuntu.com/ubuntu/ jammy main restricted'
        key_url: 'http://keyserver.ubuntu.com/pks/lookup?op=get&search=0x871920D1991BC93C'
      - sourceline: 'deb http://archive.ubuntu.com/ubuntu/ jammy-updates main restricted'
      - sourceline: 'deb http://archive.ubuntu.com/ubuntu/ jammy universe'
      - sourceline: 'deb http://archive.ubuntu.com/ubuntu/ jammy-updates universe'
      - sourceline: 'deb http://archive.ubuntu.com/ubuntu/ jammy multiverse'
      - sourceline: 'deb http://archive.ubuntu.com/ubuntu/ jammy-updates multiverse'

    include:
      # Core C library and runtime
      - libc6
      - libgcc-s1
      - libstdc++6
      
      # Wayland client libraries
      - libwayland-client0
      - libwayland-cursor0
      - libwayland-egl1
      - libxkbcommon0
      
      # OpenGL/Vulkan graphics libraries
      - libegl1
      - libgl1
      - libgles2
      - libvulkan1
      - mesa-vulkan-drivers
      - libdrm2
      - libx11-6
      - libxau6
      - libxdmcp6
      - libxcb1
      - libxcb-dri2-0
      - libxcb-dri3-0
      - libxcb-present0
      - libxcb-sync1
      - libxcb-xfixes0
      - libxshmfence1
      - libxxf86vm1
      
      # System libraries for networking and SSL
      - libssl3
      - ca-certificates
      
      # Additional graphics and system libraries
      - libexpat1
      - libffi8
      - libpciaccess0
      - libsensors5
      - libedit2
      - libelf1
      - libz3-4
      - libzstd1
      - libbsd0
      - libmd0
      
      # Image processing libraries (for texture loading)
      - libjpeg8
      - libpng16-16
      - libbrotli1
      
    exclude:
      # Exclude unnecessary packages to reduce size
      - humanity-icon-theme
      - hicolor-icon-theme
      - libgtk-3-common
      - shared-mime-info
      - gsettings-desktop-schemas

  files:
    include:
      - usr/bin/wax11
      - usr/share/wallshader
      - opt/wax11
    exclude:
      - usr/lib/x86_64-linux-gnu/gconv
      - usr/share/man
      - usr/share/doc
      - usr/share/lintian

  runtime:
    env:
      # Set up environment for Wayland
      WAYLAND_DISPLAY: $WAYLAND_DISPLAY
      XDG_RUNTIME_DIR: $XDG_RUNTIME_DIR
      # Vulkan driver discovery
      VK_ICD_FILENAMES: $APPDIR/usr/share/vulkan/icd.d/intel_icd.x86_64.json:$APPDIR/usr/share/vulkan/icd.d/radeon_icd.x86_64.json:$APPDIR/usr/share/vulkan/icd.d/lvp_icd.x86_64.json
      VK_LAYER_PATH: $APPDIR/usr/share/vulkan/explicit_layer.d
      # Mesa driver paths
      LIBGL_DRIVERS_PATH: $APPDIR/usr/lib/x86_64-linux-gnu/dri
      # WallShader directories - use AppImage bundled assets as fallback
      WAX11_SHARE_DIR: $APPDIR/opt/wax11
      WAX11_DATA_DIR: $HOME/.local/share/wax11
      WAX11_CONFIG_DIR: $HOME/.config/wax11
      WAX11_CACHE_DIR: $HOME/.cache/wax11

  test:
    fedora-30:
      image: fedora:30
      command: ./AppRun --help
      use_host_x: false
    debian-stable:
      image: debian:stable
      command: ./AppRun --help
      use_host_x: false
    ubuntu-xenial:
      image: ubuntu:xenial
      command: ./AppRun --help
      use_host_x: false

AppImage:
  arch: x86_64
  file_name: wax11-x86_64.AppImage
  sign-key: None
  update-information: gh-releases-zsync|NickCody|WallShader|latest|WallShader-*x86_64.AppImage.zsync

script:
  # Note: The binary is built by CI before appimage-builder runs.
  # This ensures proper Cargo caching. For local builds, run:
  #   cargo build --release
  # before running appimage-builder.

  # Verify the binary exists
  - |
    if [ ! -f "target/release/wax11" ]; then
      echo "ERROR: target/release/wax11 not found!"
      echo "Please run 'cargo build --release' before building the AppImage."
      exit 1
    else
      echo "Using wallshader binary from target/release/"
    fi

  # Create necessary directories
  - mkdir -p AppDir/usr/bin
  - mkdir -p AppDir/usr/lib
  - mkdir -p AppDir/usr/share/wax11
  - mkdir -p AppDir/usr/share/applications
  - mkdir -p AppDir/usr/share/icons/hicolor/256x256/apps

  # Copy the main binary
  - cp target/release/wax11 AppDir/usr/bin/

  # Bundle shaders and playlists inside the AppImage with proper structure
  # Structure: opt/wax11/shaders/<pack>/ and opt/wax11/playlists/*.toml
  # On first run, these are extracted to ~/.local/share/wax11/ (always overwrites on version change)
  # Users should customize in ~/.config/wax11/ instead
  - mkdir -p AppDir/opt/wax11/shaders
  - mkdir -p AppDir/opt/wax11/playlists
  - |
    # Copy shader packs
    for shader_dir in shaders/*/; do
      if [ -d "$shader_dir" ]; then
        cp -r "$shader_dir" AppDir/opt/wax11/shaders/
      fi
    done
  - |
    # Copy playlists
    for playlist in playlists/*.toml; do
      if [ -f "$playlist" ]; then
        cp "$playlist" AppDir/opt/wax11/playlists/
      fi
    done

  # Create a desktop file
  - |
    cat > AppDir/usr/share/applications/wallshader.desktop << 'EOF'
    [Desktop Entry]
    Type=Application
    Name=wax11 shader
    Comment=GPU shader wallpaper engine for Wayland
    Exec=wax11
    Icon=wax11
    Categories=Graphics;Utility;
    Keywords=wallpaper;shader;wayland;gpu;
    Terminal=false
    StartupNotify=false
    EOF

  # Create a simple icon (you may want to replace this with an actual icon)
  - |
    cat > AppDir/usr/share/icons/hicolor/256x256/apps/wallshader.svg << 'EOF'
    <?xml version="1.0" encoding="UTF-8"?>
    <svg width="256" height="256" viewBox="0 0 256 256" xmlns="http://www.w3.org/2000/svg">
      <rect width="256" height="256" fill="#2E8B57"/>
      <circle cx="128" cy="128" r="80" fill="#FFD700" opacity="0.8"/>
      <text x="128" y="140" text-anchor="middle" fill="white" font-family="sans-serif" font-size="24" font-weight="bold">WS</text>
    </svg>
    EOF

  # Make the desktop file executable
  - chmod +x AppDir/usr/share/applications/wallshader.desktop

  # Make the binary executable
  - chmod +x AppDir/usr/bin/wax11

  # Create a symlink for the desktop file in the root
  - ln -sf usr/share/applications/wallshader.desktop AppDir/